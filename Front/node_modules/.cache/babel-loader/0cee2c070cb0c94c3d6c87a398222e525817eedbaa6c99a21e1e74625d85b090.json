{"ast":null,"code":"import axios from 'axios';\n\n//Action types\nexport const ADD_CHAR = 'ADD_CHARACTER';\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const GET_CHARACTER_DETAIL = 'GET_CHARACTER_DETAIL';\nexport const GET_FAVORITES = \"GET_FAVORITES\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = 'FILTER';\nexport const ORDER = 'ORDER';\n\n//Action creators\n\nexport const addFavorite = character => {\n  return function () {\n    axios.post(\"http://localhost:3001/rickandmorty/fav\", character) //GUARDO la información de \"character\" en la URL/fav\n    .then(res => console.log(\"Personaje Agregado\"));\n  };\n};\nexport const removeFavorite = id => {\n  return async function (dispatch) {\n    await axios.delete(`http://localhost:3001/rickandmorty/fav/${id}`); //Pido BORRAR el character según la ID\n    dispatch({\n      type: REMOVE_FAVORITE,\n      payload: id\n    }); //Actualizo los favoritos.\n    alert(\"Eliminado con éxito\"); //Mando una alerta.\n  };\n};\n\nexport const getFavorites = () => {\n  return async function (dispatch) {\n    const response = await axios.get(`http://localhost:3001/rickandmorty/fav`);\n    dispatch({\n      type: GET_FAVORITES,\n      payload: response.data\n    });\n  };\n};\nexport const getCharacterDetail = id => {\n  return async function (dispatch) {\n    const response = await axios.get(`http://localhost:3001/detail/${id}`);\n    dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: response.data\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = id => {\n  return {\n    type: ORDER,\n    payload: id\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};","map":{"version":3,"names":["axios","ADD_CHAR","REMOVE_FAVORITE","GET_CHARACTER_DETAIL","GET_FAVORITES","CLEAN_DETAIL","FILTER","ORDER","addFavorite","character","post","then","res","console","log","removeFavorite","id","dispatch","delete","type","payload","alert","getFavorites","response","get","data","getCharacterDetail","filterCards","gender","orderCards","cleanDetail"],"sources":["D:/EjerciciosHENRY/Modulos/rick_and_morty/Front/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n//Action types\r\nexport const ADD_CHAR = 'ADD_CHARACTER';\r\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\r\nexport const GET_CHARACTER_DETAIL = 'GET_CHARACTER_DETAIL'\r\nexport const GET_FAVORITES = \"GET_FAVORITES\";\r\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\r\n\r\nexport const FILTER = 'FILTER';\r\nexport const ORDER = 'ORDER';\r\n\r\n//Action creators\r\n\r\nexport const addFavorite = (character) =>{\r\n    return function() {\r\n        axios.post(\"http://localhost:3001/rickandmorty/fav\", character)         //GUARDO la información de \"character\" en la URL/fav\r\n        .then((res) => console.log(\"Personaje Agregado\"));\r\n    }\r\n    \r\n }\r\n\r\nexport const removeFavorite = (id) =>{\r\n    return async function (dispatch) {\r\n        await axios.delete(`http://localhost:3001/rickandmorty/fav/${id}`)      //Pido BORRAR el character según la ID\r\n        dispatch({ type: REMOVE_FAVORITE, payload: id});                                               //Actualizo los favoritos.\r\n        alert(\"Eliminado con éxito\");                                           //Mando una alerta.\r\n    }\r\n                                             \r\n }\r\n\r\nexport const getFavorites = () => {\r\n    return async function (dispatch) {\r\n        const response = await axios.get(`http://localhost:3001/rickandmorty/fav`);\r\n        dispatch({ type: GET_FAVORITES, payload: response.data });\r\n      };\r\n} \r\n\r\nexport const getCharacterDetail = (id) =>{\r\n    return async function (dispatch) {\r\n        const response = await axios.get(`http://localhost:3001/detail/${id}`);\r\n        dispatch({ type: GET_CHARACTER_DETAIL, payload: response.data });\r\n    };\r\n}\r\n\r\nexport const filterCards = (gender) => { return { type: FILTER, payload: gender } }\r\n\r\nexport const orderCards = (id) => { return { type: ORDER, payload: id } }\r\n\r\nexport const cleanDetail = () => { return { type: CLEAN_DETAIL } };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAG,eAAe;AACvC,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,YAAY,GAAG,cAAc;AAE1C,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,KAAK,GAAG,OAAO;;AAE5B;;AAEA,OAAO,MAAMC,WAAW,GAAIC,SAAS,IAAI;EACrC,OAAO,YAAW;IACdT,KAAK,CAACU,IAAI,CAAC,wCAAwC,EAAED,SAAS,CAAC,CAAS;IAAA,CACvEE,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC;EACrD,CAAC;AAEJ,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAI;EACjC,OAAO,gBAAgBC,QAAQ,EAAE;IAC7B,MAAMjB,KAAK,CAACkB,MAAM,CAAE,0CAAyCF,EAAG,EAAC,CAAC,EAAM;IACxEC,QAAQ,CAAC;MAAEE,IAAI,EAAEjB,eAAe;MAAEkB,OAAO,EAAEJ;IAAE,CAAC,CAAC,CAAC,CAA+C;IAC/FK,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAA2C;EAC5E,CAAC;AAEJ,CAAC;;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC9B,OAAO,gBAAgBL,QAAQ,EAAE;IAC7B,MAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,wCAAuC,CAAC;IAC1EP,QAAQ,CAAC;MAAEE,IAAI,EAAEf,aAAa;MAAEgB,OAAO,EAAEG,QAAQ,CAACE;IAAK,CAAC,CAAC;EAC3D,CAAC;AACP,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIV,EAAE,IAAI;EACrC,OAAO,gBAAgBC,QAAQ,EAAE;IAC7B,MAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,gCAA+BR,EAAG,EAAC,CAAC;IACtEC,QAAQ,CAAC;MAAEE,IAAI,EAAEhB,oBAAoB;MAAEiB,OAAO,EAAEG,QAAQ,CAACE;IAAK,CAAC,CAAC;EACpE,CAAC;AACL,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,MAAM,IAAK;EAAE,OAAO;IAAET,IAAI,EAAEb,MAAM;IAAEc,OAAO,EAAEQ;EAAO,CAAC;AAAC,CAAC;AAEnF,OAAO,MAAMC,UAAU,GAAIb,EAAE,IAAK;EAAE,OAAO;IAAEG,IAAI,EAAEZ,KAAK;IAAEa,OAAO,EAAEJ;EAAG,CAAC;AAAC,CAAC;AAEzE,OAAO,MAAMc,WAAW,GAAGA,CAAA,KAAM;EAAE,OAAO;IAAEX,IAAI,EAAEd;EAAa,CAAC;AAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}