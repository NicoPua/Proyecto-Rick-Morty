{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\n/*USERNAME\r\nel nombre de usuario tiene que ser un email (explora validaciónes REGEX en internet!).\r\nel nombre de usuario no puede estar vacío.\r\nel nombre de usuario no puede tener más de 35 caracteres.\r\n\r\nPASS\r\nla contraseña tiene que tener al menos un número.\r\nla contraseña tiene que tener una longitud entre 6 y 10 caracteres.\r\n*/\n\nconst validation = (form, setErrors, errors) => {\n  _s();\n  useEffect(() => {\n    if (!form.username) {\n      setErrors({\n        ...errors,\n        username: 'E-mail vacío'\n      });\n    } else if (form.username.length < 35) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.username)) {\n        setErrors({\n          ...errors,\n          username: ''\n        });\n      } else {\n        setErrors({\n          ...errors,\n          username: 'E-mail invalido'\n        });\n      }\n    } else {\n      setErrors({\n        ...errors,\n        username: 'Exceso de characters'\n      });\n    }\n    if (!form.password) {\n      setErrors(current => ({\n        ...current,\n        password: 'Pass vacía'\n      }));\n    } else if (form.password.trim().length >= 6 && form.password.trim().length <= 10) {\n      //.trim() descarto lo espacios.\n      if (form.password.filter(char => isNaN(char)) === true) {\n        setErrors(current => ({\n          ...current,\n          password: ''\n        }));\n      } else {\n        setErrors(current => ({\n          ...current,\n          password: 'Debe contener al menos un Número'\n        }));\n      }\n    } else {\n      setErrors(current => ({\n        ...current,\n        password: 'Debe contener entre 6 y 10 characters'\n      }));\n    }\n  }, [form]);\n  //{...errors,password: 'Debe contener al menos un Número'}\n};\n_s(validation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default validation;","map":{"version":3,"names":["useEffect","validation","form","setErrors","errors","_s","username","length","test","password","current","trim","filter","char","isNaN"],"sources":["D:/EjerciciosHENRY/Modulos/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["import { useEffect } from \"react\";\r\n/*USERNAME\r\nel nombre de usuario tiene que ser un email (explora validaciónes REGEX en internet!).\r\nel nombre de usuario no puede estar vacío.\r\nel nombre de usuario no puede tener más de 35 caracteres.\r\n\r\nPASS\r\nla contraseña tiene que tener al menos un número.\r\nla contraseña tiene que tener una longitud entre 6 y 10 caracteres.\r\n*/\r\n\r\nconst validation = (form,setErrors,errors) => {\r\n    useEffect(()=>{\r\n        if(!form.username){\r\n            setErrors({...errors,username:'E-mail vacío'});\r\n        }else if(form.username.length < 35 ){\r\n            if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.username)){\r\n                setErrors({...errors,username: ''});\r\n            }else{\r\n                setErrors({...errors,username: 'E-mail invalido'});\r\n            }\r\n        }else{\r\n            setErrors({...errors,username: 'Exceso de characters'});\r\n        }\r\n    \r\n        if (!form.password) {\r\n            setErrors((current) => ({...current,password: 'Pass vacía'}));\r\n        }else if(form.password.trim().length >= 6 && form.password.trim().length <= 10){        //.trim() descarto lo espacios.\r\n            if(form.password.filter((char) => isNaN(char)) === true){\r\n                setErrors((current) => ({...current,password: ''}));\r\n            }else{\r\n                setErrors((current) => ({...current,password: 'Debe contener al menos un Número'}));\r\n            }\r\n        }else{\r\n            setErrors((current) => ({...current,password: 'Debe contener entre 6 y 10 characters'}));\r\n        }\r\n    },[form]);\r\n    //{...errors,password: 'Debe contener al menos un Número'}\r\n}\r\n\r\nexport default validation;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAACC,SAAS,EAACC,MAAM,KAAK;EAAAC,EAAA;EAC1CL,SAAS,CAAC,MAAI;IACV,IAAG,CAACE,IAAI,CAACI,QAAQ,EAAC;MACdH,SAAS,CAAC;QAAC,GAAGC,MAAM;QAACE,QAAQ,EAAC;MAAc,CAAC,CAAC;IAClD,CAAC,MAAK,IAAGJ,IAAI,CAACI,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;MAChC,IAAG,6CAA6C,CAACC,IAAI,CAACN,IAAI,CAACI,QAAQ,CAAC,EAAC;QACjEH,SAAS,CAAC;UAAC,GAAGC,MAAM;UAACE,QAAQ,EAAE;QAAE,CAAC,CAAC;MACvC,CAAC,MAAI;QACDH,SAAS,CAAC;UAAC,GAAGC,MAAM;UAACE,QAAQ,EAAE;QAAiB,CAAC,CAAC;MACtD;IACJ,CAAC,MAAI;MACDH,SAAS,CAAC;QAAC,GAAGC,MAAM;QAACE,QAAQ,EAAE;MAAsB,CAAC,CAAC;IAC3D;IAEA,IAAI,CAACJ,IAAI,CAACO,QAAQ,EAAE;MAChBN,SAAS,CAAEO,OAAO,KAAM;QAAC,GAAGA,OAAO;QAACD,QAAQ,EAAE;MAAY,CAAC,CAAC,CAAC;IACjE,CAAC,MAAK,IAAGP,IAAI,CAACO,QAAQ,CAACE,IAAI,EAAE,CAACJ,MAAM,IAAI,CAAC,IAAIL,IAAI,CAACO,QAAQ,CAACE,IAAI,EAAE,CAACJ,MAAM,IAAI,EAAE,EAAC;MAAS;MACpF,IAAGL,IAAI,CAACO,QAAQ,CAACG,MAAM,CAAEC,IAAI,IAAKC,KAAK,CAACD,IAAI,CAAC,CAAC,KAAK,IAAI,EAAC;QACpDV,SAAS,CAAEO,OAAO,KAAM;UAAC,GAAGA,OAAO;UAACD,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC;MACvD,CAAC,MAAI;QACDN,SAAS,CAAEO,OAAO,KAAM;UAAC,GAAGA,OAAO;UAACD,QAAQ,EAAE;QAAkC,CAAC,CAAC,CAAC;MACvF;IACJ,CAAC,MAAI;MACDN,SAAS,CAAEO,OAAO,KAAM;QAAC,GAAGA,OAAO;QAACD,QAAQ,EAAE;MAAuC,CAAC,CAAC,CAAC;IAC5F;EACJ,CAAC,EAAC,CAACP,IAAI,CAAC,CAAC;EACT;AACJ,CAAC;AAAAG,EAAA,CA3BKJ,UAAU;AA6BhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}