{"ast":null,"code":"var _jsxFileName = \"D:\\\\EjerciciosHENRY\\\\Modulos\\\\rick_and_morty\\\\Front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './views/About.jsx';\nimport Detail from './views/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n\n  //FUNCION PARA BUSCAR----------------------------------------------\n  const onSearch = id => {\n    const URL = 'http://localhost:3001';\n    //const URL = 'https://be-a-rym.up.railway.app/api';\n    //const KEY = 'ab609bfc7704.d3a36031c2ddc6820402';  \n    //`${URL}/character/${id}?key=${KEY}`\n\n    if (characters.find(char => char.id == id)) {\n      return alert('El Personaje ya fue añadido');\n    }\n    axios(`${URL}/onsearch/${id}`).then(response => {\n      const {\n        name\n      } = response.data;\n      if (name) {\n        setCharacters(oldChar => [...oldChar, response.data]); //Recibo el estado viejo y retorno el estado nuevo.\n      } else {\n        alert('No hay personajes con ese ID');\n      }\n    });\n  };\n  //----------------------------------------------------------------------------\n\n  //LOGIN ----------------------------------------------------------------------\n  const [access, setAccess] = useState(false);\n  const username = 'nicopua7@gmail.com';\n  const password = 'asd1234';\n  const navigate = useNavigate();\n  const login = userData => {\n    if (userData.username == username && userData.password == password) {\n      setAccess(true);\n      navigate('/home'); //Te lleva a '/home' y el access  es 'true'.\n    }\n  };\n\n  useEffect(() => {\n    //Esto no dejará navegar por la aplicación, al menos que ingrese la información correcta.\n    !access && navigate('/');\n  }, [access]);\n  //------------------------------------------------------------------------\n\n  //FUNCION CerrarCARD--------------------------------------------------------------\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== id));\n  };\n  //------------------------------------------------------------------------\n\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '25px'\n    },\n    children: [location.pathname !== '/' && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pL6xtkV/8PqXpYjx65lpLh6KLnY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Cards","Nav","About","Detail","Form","Favorites","Route","Routes","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","id","URL","find","char","alert","then","response","name","data","oldChar","access","setAccess","username","password","navigate","login","userData","onClose","filter","location","className","style","padding","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/EjerciciosHENRY/Modulos/rick_and_morty/Front/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport Nav from './components/Nav/Nav.jsx';\r\nimport About from './views/About.jsx';\r\nimport Detail from './views/Detail.jsx';\r\nimport Form from './components/Form/Form.jsx';\r\nimport Favorites from './components/Favorites/Favorites';\r\n\r\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App () {\r\n  const [characters,setCharacters] = useState([]);\r\n\r\n  //FUNCION PARA BUSCAR----------------------------------------------\r\n  const onSearch = (id) => {\r\n    \r\n    const URL = 'http://localhost:3001';\r\n    //const URL = 'https://be-a-rym.up.railway.app/api';\r\n    //const KEY = 'ab609bfc7704.d3a36031c2ddc6820402';  \r\n    //`${URL}/character/${id}?key=${KEY}`\r\n\r\n    if (characters.find((char) => char.id == id)) {\r\n      return alert('El Personaje ya fue añadido');\r\n    }\r\n\r\n    axios(`${URL}/onsearch/${id}`)\r\n      .then((response) => {\r\n        const {name} = response.data;\r\n        if (name) {\r\n          setCharacters((oldChar) => [...oldChar, response.data]); //Recibo el estado viejo y retorno el estado nuevo.\r\n        } else {\r\n          alert('No hay personajes con ese ID');\r\n        }\r\n    });  \r\n  }\r\n  //----------------------------------------------------------------------------\r\n\r\n  //LOGIN ----------------------------------------------------------------------\r\n  const [access, setAccess] = useState(false);\r\n  const username = 'nicopua7@gmail.com';\r\n  const password = 'asd1234';\r\n  \r\n  const navigate = useNavigate();\r\n  const login = (userData) => {\r\n    if (userData.username == username && userData.password == password) {\r\n      setAccess(true);\r\n      navigate('/home');    //Te lleva a '/home' y el access  es 'true'.\r\n    }  \r\n  }\r\n\r\n  useEffect(() => {           //Esto no dejará navegar por la aplicación, al menos que ingrese la información correcta.\r\n    !access && navigate('/');\r\n  }, [access]);\r\n  //------------------------------------------------------------------------\r\n  \r\n  //FUNCION CerrarCARD--------------------------------------------------------------\r\n  const onClose = (id) => {\r\n    setCharacters(characters.filter((char) => char.id !== id));\r\n  }\r\n  //------------------------------------------------------------------------\r\n\r\n  const location = useLocation(); \r\n \r\n  return (\r\n    <div className='App' style={{ padding: '25px' }}>\r\n      {\r\n        location.pathname!=='/' && <Nav onSearch={onSearch}/>\r\n      } \r\n      <Routes>\r\n        <Route path='/' element={<Form login={login}/>} /> \r\n        <Route path='/home' element={<Cards characters={characters} onClose={onClose}/>}/>\r\n        <Route path='/about' element={<About />}/>\r\n        <Route path='/detail/:detailId' element={<Detail />}/>\r\n        <Route path='/favorites' element={<Favorites />}/>\r\n      </Routes>     \r\n    </div>\r\n  )\r\n} \r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAElB,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,SAAS,MAAM,kCAAkC;AAExD,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAAA,EAAI;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE/C;EACA,MAAMmB,QAAQ,GAAIC,EAAE,IAAK;IAEvB,MAAMC,GAAG,GAAG,uBAAuB;IACnC;IACA;IACA;;IAEA,IAAIJ,UAAU,CAACK,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,IAAIA,EAAE,CAAC,EAAE;MAC5C,OAAOI,KAAK,CAAC,6BAA6B,CAAC;IAC7C;IAEAZ,KAAK,CAAE,GAAES,GAAI,aAAYD,EAAG,EAAC,CAAC,CAC3BK,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAACC;MAAI,CAAC,GAAGD,QAAQ,CAACE,IAAI;MAC5B,IAAID,IAAI,EAAE;QACRT,aAAa,CAAEW,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAEH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3D,CAAC,MAAM;QACLJ,KAAK,CAAC,8BAA8B,CAAC;MACvC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMgC,QAAQ,GAAG,oBAAoB;EACrC,MAAMC,QAAQ,GAAG,SAAS;EAE1B,MAAMC,QAAQ,GAAGvB,WAAW,EAAE;EAC9B,MAAMwB,KAAK,GAAIC,QAAQ,IAAK;IAC1B,IAAIA,QAAQ,CAACJ,QAAQ,IAAIA,QAAQ,IAAII,QAAQ,CAACH,QAAQ,IAAIA,QAAQ,EAAE;MAClEF,SAAS,CAAC,IAAI,CAAC;MACfG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAI;IACxB;EACF,CAAC;;EAEDjC,SAAS,CAAC,MAAM;IAAY;IAC1B,CAAC6B,MAAM,IAAII,QAAQ,CAAC,GAAG,CAAC;EAC1B,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EACZ;;EAEA;EACA,MAAMO,OAAO,GAAIjB,EAAE,IAAK;IACtBF,aAAa,CAACD,UAAU,CAACqB,MAAM,CAAEf,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC5D,CAAC;EACD;;EAEA,MAAMmB,QAAQ,GAAG7B,WAAW,EAAE;EAE9B,oBACEI,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,GAE5CJ,QAAQ,CAACK,QAAQ,KAAG,GAAG,iBAAI9B,OAAA,CAACX,GAAG;MAACgB,QAAQ,EAAEA;IAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAEvDlC,OAAA,CAACL,MAAM;MAAAkC,QAAA,gBACL7B,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEpC,OAAA,CAACR,IAAI;UAAC6B,KAAK,EAAEA;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClDlC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEpC,OAAA,CAACZ,KAAK;UAACe,UAAU,EAAEA,UAAW;UAACoB,OAAO,EAAEA;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClFlC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEpC,OAAA,CAACV,KAAK;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC1ClC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEpC,OAAA,CAACT,MAAM;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACtDlC,OAAA,CAACN,KAAK;QAACyC,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEpC,OAAA,CAACP,SAAS;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAAChC,EAAA,CAnEQD,GAAG;EAAA,QAgCOJ,WAAW,EAmBXD,WAAW;AAAA;AAAAyC,EAAA,GAnDrBpC,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}